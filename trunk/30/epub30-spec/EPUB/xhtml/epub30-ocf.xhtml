<?xml version="1.0" encoding="utf-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><title>EPUB Open Container Format (OCF) 3.0</title><link rel="stylesheet" type="text/css" href="../css/epub-spec.css"/></head><body><h1 class="title">EPUB Open Container Format (OCF) 3.0</h1><p class="identity"><span class="releaseinfo">Recommended Specification</span> <span class="pubdate">11 October 2011</span></p><dl class="printhistory"><dt>This version</dt><dd><a href="http://www.idpf.org/epub/30/spec/epub30-ocf-20111011.html">http://www.idpf.org/epub/30/spec/epub30-ocf-20111011.html</a></dd><dt>Latest version</dt><dd><a href="http://www.idpf.org/epub/30/spec/epub30-ocf.html">http://www.idpf.org/epub/30/spec/epub30-ocf.html</a></dd><dt>Previous version</dt><dd><a href="http://www.idpf.org/epub/30/spec/epub30-ocf-20110908.html">http://www.idpf.org/epub/30/spec/epub30-ocf-20110908.html</a></dd></dl><p class="diff"> A diff of changes from the previous draft is available at <a href="http://code.google.com/p/epub-revision/source/diff?spec=svn3218&amp;old=3183&amp;r=3218&amp;format=side&amp;path=%2Ftrunk%2Fsrc%2Fspec%2Fepub30-ocf.xml">this link</a>. </p><p class="errata"> Please refer to the <a href="http://idpf.org/epub/30/spec/epub30-ocf-errata/">errata</a> for this document, which may include some normative corrections. </p><div class="legal"><p class="copyright">Copyright © 2010, 2011 International Digital Publishing Forum™</p><div class="legalnotice" title="Legal Notice"><a id="d57504e42"/><p>All rights reserved. This work is protected under Title 17 of the United States Code. Reproduction and dissemination of this work with changes is prohibited except with the written permission of the <a href="http://www.idpf.org">International Digital Publishing Forum (IDPF)</a>. </p><p>EPUB is a registered trademark of the International Digital Publishing Forum.</p></div></div><div class="authorgroup"><p class="bridgehead">Editors</p><p class="editor">James Pritchett, Learning Ally (formerly Recording for the Blind &amp; Dyslexic) </p><p class="editor">Markus Gylling, DAISY Consortium </p></div><nav class="toc" id="toc"><p><strong>Table of Contents</strong></p><ol><li><a href="#sec-overview">1. Overview</a></li><li><ol><li><a href="#sec-overview-purpose-and-scope">1.1. Purpose and Scope</a></li><li><a href="#sec-conformance">1.3. Conformance Statements</a></li><li><a href="#ocf-conformance-content">1.4. Content Conformance</a></li><li><a href="#ocf-conformance-rs">1.5. Reading System Conformance</a></li></ol></li><li><a href="#sec-container-abstract">2. OCF Abstract Container</a></li><li><ol><li><a href="#sec-container-abstract-overview">2.1. Overview</a></li><li><a href="#sec-container-file-and-dir-structure">2.2. File and Directory Structure</a></li><li><a href="#sec-container-iri">2.3. Relative IRIs for Referencing Other Components</a></li><li><a href="#sec-container-filenames">2.4. File Names</a></li><li><a href="#sec-container-metainf">2.5. META-INF</a></li><li><ol><li><a href="#sec-container-metainf-container.xml">2.5.1. Container – META-INF/container.xml</a></li><li><a href="#sec-container-metainf-encryption.xml">2.5.2. Encryption – META-INF/encryption.xml</a></li><li><a href="#sec-container-metainf-manifest.xml">2.5.3. Manifest – META-INF/manifest.xml</a></li><li><a href="#sec-container-metainf-metadata.xml">2.5.4. Metadata – META-INF/metadata.xml</a></li><li><a href="#sec-container-metainf-rights.xml">2.5.5. Rights Management – META-INF/rights.xml</a></li><li><a href="#sec-container-metainf-signatures.xml">2.5.6. Digital Signatures – META-INF/signatures.xml</a></li></ol></li></ol></li><li><a href="#physical-container-zip">3. OCF ZIP Container</a></li><li><ol><li><a href="#sec-container-zip-overview">3.1. Overview</a></li><li><a href="#sec-zip-container-zipreqs">3.2. ZIP File Requirements</a></li><li><a href="#sec-zip-container-mime">3.3. OCF ZIP Container Media Type Identification</a></li></ol></li><li><a href="#font-obfuscation">4. Font Obfuscation</a></li><li><ol><li><a href="#fobfus-intro">4.1. Introduction</a></li><li><a href="#fobfus-algorithm">4.2. Obfuscation Algorithm</a></li><li><a href="#fobfus-keygen">4.3. Generating the Obfuscation Key</a></li><li><a href="#fobfus-specifying">4.4. Specifying Obfuscated Resources</a></li></ol></li><li><a href="#app-schemas">A. Schemas</a></li><li><ol><li><a href="#app-schema-container">A.1. Schema for <code class="filename">container.xml</code></a></li><li><a href="#app-schema-encryption">A.2. Schema for <code class="filename">encryption.xml</code></a></li><li><a href="#app-schema-signatures">A.3. Schema for <code class="filename">signatures.xml</code></a></li></ol></li><li><a href="#example">B. Example</a></li><li><a href="#app-media-type">C. The <code>application/epub+zip</code> Media Type</a></li></ol></nav><section class="chapter" title="1 Overview" id="sec-overview"><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-overview">›</a> </span>1 Overview</h2><section class="section" title="1.1 Purpose and Scope" id="sec-overview-purpose-and-scope"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-overview-purpose-and-scope">›</a> </span>1.1 Purpose and Scope</h3><p class="informative"> This section is informative</p><p>This specification, EPUB Open Container Format (OCF) 3.0, defines a file format and processing model for encapsulating the sets of related resources that comprise one or more <a class="glossterm" href="epub30-terminology.xhtml#gloss-epub-publication" title="EPUB Publication (or Publication)">EPUB® Publications</a> into a single-file container.</p><p id="sibling-specs">This specification is one of a family of related specifications that compose EPUB 3, the third major revision of an interchange and delivery format for digital publications based on XML and Web Standards. It is meant to be read and understood in concert with the other specifications that make up EPUB 3:</p><div class="itemizedlist" id="epub-specs-listing"><ul class="itemizedlist"><li class="listitem"><p>The EPUB 3 Overview <a class="biblioref" href="epub30-references.xhtml#refEPUB3Overview" title="EPUB 3 Overview">[<abbr>EPUB3Overview</abbr>]</a>, which provides an informative overview of EPUB and a roadmap to the rest of the EPUB 3 documents. The Overview should be read first.</p></li><li class="listitem"><p>EPUB Publications 3.0 <a class="biblioref" href="epub30-references.xhtml#refPublications3" title="EPUB Publications 3.0">[<abbr>Publications30</abbr>]</a>, which defines publication-level semantics and overarching conformance requirements for <a class="glossterm" href="epub30-terminology.xhtml#gloss-epub-publication" title="EPUB Publication (or Publication)">EPUB Publication</a>s.</p></li><li class="listitem"><p>EPUB Content Documents 3.0 <a class="biblioref" href="epub30-references.xhtml#refContentDocs3" title="EPUB Content Documents 3.0">[<abbr>ContentDocs30</abbr>]</a>, which defines profiles of XHTML, SVG and CSS for use in the context of <a class="glossterm" href="epub30-terminology.xhtml#gloss-epub-publication" title="EPUB Publication (or Publication)">EPUB Publication</a>s.</p></li><li class="listitem"><p>EPUB Media Overlays 3.0 <a class="biblioref" href="epub30-references.xhtml#refOverlays3" title="EPUB Media Overlays 3.0">[<abbr>MediaOverlays30</abbr>]</a>, which defines a format and a processing model for synchronization of text and audio.</p></li></ul></div><p>OCF is the required container technology for EPUB Publications. OCF may play a role in the following workflows:</p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>During the preparation steps in producing an electronic Publication, OCF may be used as the container format when exchanging in-progress Publications between different individuals and/or different organizations.</p></li><li class="listitem"><p>When providing an electronic Publication from publisher or conversion house to the distribution or sales channel, OCF is the recommended container format to be used as the transport format.</p></li><li class="listitem"><p>When delivering the final Publication to an EPUB Reading System or <a class="glossterm" href="epub30-terminology.xhtml#gloss-user" title="User">User</a>, OCF is the required format for the container that holds all of the assets that make up the Publication.</p></li></ul></div><p>The OCF specification defines the rules for structuring the file collection in the abstract: the "abstract container". It also defines the rules for the representation of this abstract container within a ZIP archive: the "physical container". The rules for ZIP physical containers build upon the ZIP technologies used by <a class="biblioref" href="epub30-references.xhtml#refODF" title="ODF Open Document Format">[<abbr>ODF</abbr>]</a>. OCF also defines a standard method for obfuscating embedded fonts for those EPUB Publications that require this functionality.</p><p>This specification supersedes Open Container Format (OCF) 2.0.1 <a class="biblioref" href="epub30-references.xhtml#refOCF2" title="Open Container Format 2.0.1">[<abbr>OCF2</abbr>]</a>. Refer to <a class="biblioref" href="epub30-references.xhtml#refEPUB3Changes" title="EPUB 3 Differences from EPUB 2.0.1">[<abbr>EPUB3Changes</abbr>]</a> for information on differences between this specification and its predecessor.</p></section><section class="section" title="1.3 Conformance Statements" id="sec-conformance"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-conformance">›</a> </span>1.3 Conformance Statements</h3><p>The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <a class="biblioref" href="epub30-references.xhtml#refRFC2119" title="Key words for use in RFCs to Indicate Requirement Levels (RFC 2119)">[<abbr>RFC2119</abbr>]</a>. </p><p>All sections of this specification are normative except where identified by the informative status label "This section is informative". The application of informative status to sections and appendices applies to all child content and subsections they may contain.</p><p>All examples in this specification are informative.</p></section><section class="section" title="1.4 Content Conformance" id="ocf-conformance-content"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-conformance-content">›</a> </span>1.4 Content Conformance</h3><div class="conformance-list"><ul class="conformance-list"><li class="listitem"><p id="confreq-ocf-content-abstr"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-ocf-content-abstr">›</a> </span>An OCF Abstract Container must meet the conformance constraints defined in <a class="xref" href="#sec-container-abstract" title="2 OCF Abstract Container"><em>OCF Abstract Container</em></a>. </p></li><li class="listitem"><p id="confreq-ocf-content-zip"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-ocf-content-zip">›</a> </span>An OCF ZIP Container (also referred to as an <a class="glossterm" href="epub30-terminology.xhtml#gloss-container" title="EPUB Container (or Container)">EPUB Container</a>) must meet the conformance constraints defined in <a class="xref" href="#physical-container-zip" title="3 OCF ZIP Container"><em>OCF ZIP Container</em></a>. </p></li></ul></div></section><section class="section" title="1.5 Reading System Conformance" id="ocf-conformance-rs"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-conformance-rs">›</a> </span>1.5 Reading System Conformance</h3><p>An <a class="glossterm" href="epub30-terminology.xhtml#gloss-epub-reading-system" title="EPUB Reading System (or Reading System)">EPUB Reading System</a> must meet all of the following criteria:</p><div class="conformance-list"><ul class="conformance-list"><li class="listitem"><p id="confreq-ocf-rs-zip"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-ocf-rs-zip">›</a> </span>It must process the OCF ZIP Container in conformance with all Reading System conformance constraints expressed in <a class="xref" href="#physical-container-zip" title="3 OCF ZIP Container"><em>OCF ZIP Container</em></a>. </p></li><li class="listitem"><p id="confreq-ocf-fobfus"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-ocf-fobfus">›</a> </span>If it has a <a class="glossterm" href="epub30-terminology.xhtml#gloss-viewport" title="Viewport">Viewport</a>, it must support deobfuscation of fonts as defined in <a class="xref" href="#font-obfuscation" title="4 Font Obfuscation"><em>Font Obfuscation</em></a>. </p></li></ul></div></section></section><section class="chapter" title="2 OCF Abstract Container" id="sec-container-abstract"><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-abstract">›</a> </span>2 OCF Abstract Container</h2><section class="section" title="2.1 Overview" id="sec-container-abstract-overview"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-abstract-overview">›</a> </span>2.1 Overview</h3><p class="informative"> This section is informative</p><p>An OCF Abstract Container defines a file system model for the contents of the container. The file system model uses a single common root directory for all of the contents of the container. All (non-remote) resources for embedded Publications are located within the directory tree headed by the container’s root directory, although no specific file system structure is mandated for this. The file system model also includes a mandatory directory named <code class="filename">META-INF</code> that is a direct child of the container's root directory and is used to store the following special files:</p><div class="variablelist"><dl><dt class="varlistentry"><span class="term"><code class="filename">container.xml</code> <code class="option">[required]</code></span></dt><dd><p>Identifies the file that is the point of entry for each embedded Publication.</p></dd><dt class="varlistentry"><span class="term"><code class="filename">signatures.xml</code> <code class="option">[optional]</code> </span></dt><dd><p>Contains digital signatures for various assets.</p></dd><dt class="varlistentry"><span class="term"><code class="filename">encryption.xml</code> <code class="option">[optional]</code></span></dt><dd><p>Contains information about the encryption of Publication resources. (This file is required if <a href="#font-obfuscation" title="4 Font Obfuscation">font obfuscation</a> is used.)</p></dd><dt class="varlistentry"><span class="term"><code class="filename">metadata.xml</code> <code class="option">[optional]</code></span></dt><dd><p>Used to store metadata about the container.</p></dd><dt class="varlistentry"><span class="term"><code class="filename">rights.xml</code> <code class="option">[optional]</code></span></dt><dd><p>Used to store information about digital rights.</p></dd><dt class="varlistentry"><span class="term"><code class="filename">manifest.xml</code> <code class="option">[allowed]</code></span></dt><dd><p>A manifest of container contents as allowed by Open Document Format <a class="biblioref" href="epub30-references.xhtml#refODF" title="ODF Open Document Format">[<abbr>ODF</abbr>]</a>. </p></dd></dl></div><p>Complete conformance requirements for the various files in <code class="filename">META-INF</code> are found in <a class="xref" href="#sec-container-metainf" title="2.5 META-INF">META-INF</a>. </p></section><section class="section" title="2.2 File and Directory Structure" id="sec-container-file-and-dir-structure"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-file-and-dir-structure">›</a> </span>2.2 File and Directory Structure</h3><p>The virtual file system for the OCF Abstract Container must have a single common root directory for all of the contents of the container.</p><p> The OCF Abstract Container must include a directory named <code class="filename">META-INF</code> that is a direct child of the container's root directory. Requirements for the contents of this directory are described in <a class="xref" href="#sec-container-metainf" title="2.5 META-INF">META-INF</a>. </p><p>The file name <code class="filename">mimetype</code> in the root directory is reserved for use by OCF ZIP Containers, as explained in <a class="xref" href="#physical-container-zip" title="3 OCF ZIP Container"><em>OCF ZIP Container</em></a>. </p><p>All other files within the OCF Abstract Container may be in any location descendant from the container's root directory except within the <code class="filename">META-INF</code> directory.</p><p>It is recommended that the contents of each of the individual Publications be stored within its own dedicated directory under the container's root.</p></section><section class="section" title="2.3 Relative IRIs for Referencing Other Components" id="sec-container-iri"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-iri">›</a> </span>2.3 Relative IRIs for Referencing Other Components</h3><p>Files within the OCF Abstract Container must reference each other via Relative IRI References (<a class="biblioref" href="epub30-references.xhtml#refRFC3987" title="Internationalized Resource Identifiers (IRIs) (RFC 3987)">[<abbr>RFC3987</abbr>]</a> and <a class="biblioref" href="epub30-references.xhtml#refRFC3986" title="Uniform Resource Identifier (URI): Generic Syntax (RFC 3986)">[<abbr>RFC3986</abbr>]</a>). For example, if a file named <code class="filename">chapter1.html</code> references an image file named <code class="filename">image1.jpg</code> that is located in the same directory, then <code class="filename">chapter1.html</code> might contain the following as part of its content:</p><div class="informalexample"><pre class="synopsis">
&lt;img src="image1.jpg" alt="…" /&gt;
                </pre></div><p>For Relative IRI References, the Base IRI <a class="biblioref" href="epub30-references.xhtml#refRFC3986" title="Uniform Resource Identifier (URI): Generic Syntax (RFC 3986)">[<abbr>RFC3986</abbr>]</a> is determined by the relevant language specifications for the given file formats. For example, the CSS specification defines how relative IRI references work in the context of CSS style sheets and property declarations. Note that some language specifications reference RFCs that preceded RFC3987, in which case the earlier RFC applies for content in that particular language.</p><p>Unlike most language specifications, the Base IRIs for all files within the <code class="filename">META-INF</code> directory use the root directory for the Abstract Container as the default Base IRI. For example, if <code class="filename">META-INF/container.xml</code> has the following content:</p><div class="informalexample"><pre class="synopsis">
&lt;?xml version="1.0"?&gt;
&lt;container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;rootfiles&gt;
        &lt;rootfile full-path="OEBPS/Great Expectations.opf"
            media-type="application/oebps-package+xml" /&gt;	
    &lt;/rootfiles&gt;
&lt;/container&gt;
            </pre></div><p>then the path <code class="filename">OEBPS/Great Expectations.opf</code> is relative to the root directory for the OCF Abstract Container and not relative to the <code class="filename">META-INF</code> directory.</p></section><section class="section" title="2.4 File Names" id="sec-container-filenames"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-filenames">›</a> </span>2.4 File Names</h3><p>The term <code class="literal">File Name</code> represents the name of any type of file, either a directory or an ordinary file within a directory within an OCF Abstract Container. </p><p>For a given directory within the OCF Abstract Container, the <code class="literal">Path Name</code> is a string holding all directory File Names in the full path concatenated together with a <code class="literal">/</code> (<code>U+002F</code>) character separating the directory File Names. For a given file within the Abstract Container, the Path Name is the string holding all directory File Names concatenated together with a <code class="literal">/</code> character separating the directory File Names, followed by a <code class="literal">/</code> character and then the File Name of the file.</p><p>The File Name restrictions described below are designed to allow Path Names and File Names to be used without modification on most commonly used operating systems. This specification does not specify how an <a class="glossterm" href="epub30-terminology.xhtml#gloss-ocf-processor" title="OCF Processor">OCF Processor</a> that is unable to represent OCF File and Path Names would compensate for this incompatibility.</p><p>In the context of an OCF Abstract Container, File and Path Names must meet all of the following criteria:</p><div class="conformance-list"><ul class="conformance-list"><li class="listitem"><p id="ocf-fn-encoding"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-encoding">›</a> </span>File Names must be UTF-8 <a class="biblioref" href="epub30-references.xhtml#refUnicode5" title="The Unicode Consortium. The Unicode Standard, Version 5.0.0, defined by: The Unicode Standard, Version 5.0 (Boston, MA, Addison-Wesley, 2007. ISBN 0-321-48091-0)">[<abbr>Unicode</abbr>]</a> encoded.</p></li><li class="listitem"><p id="ocf-fn-length"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-length">›</a> </span>File Names must not exceed 255 bytes.</p></li><li class="listitem"><p id="ocf-pn-length"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-pn-length">›</a> </span>The Path Name for any directory or file within the Abstract Container must not exceed 65535 bytes.</p></li><li class="listitem"><p id="ocf-fn-chars"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-chars">›</a> </span>File Names must not use the following <a class="biblioref" href="epub30-references.xhtml#refUnicode5" title="The Unicode Consortium. The Unicode Standard, Version 5.0.0, defined by: The Unicode Standard, Version 5.0 (Boston, MA, Addison-Wesley, 2007. ISBN 0-321-48091-0)">[<abbr>Unicode</abbr>]</a> characters, as these characters might not be supported consistently across commonly-used operating systems:</p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>SOLIDUS: <code class="literal">/</code> (<code>U+002F</code>)</p></li><li class="listitem"><p>QUOTATION MARK: <code class="literal">"</code> (<code>U+0022</code>)</p></li><li class="listitem"><p>ASTERISK: <code class="literal">*</code> (<code>U+002A</code>)</p></li><li class="listitem"><p>FULL STOP as the last character: <code class="literal">.</code> (<code>U+002E</code>)</p></li><li class="listitem"><p>COLON: <code class="literal">:</code> (<code>U+003A</code>)</p></li><li class="listitem"><p>LESS-THAN SIGN: <code class="literal">&lt;</code> (<code>U+003C</code>)</p></li><li class="listitem"><p>GREATER-THAN SIGN: <code class="literal">&gt;</code> (<code>U+003E</code>)</p></li><li class="listitem"><p>QUESTION MARK: <code class="literal">?</code> (<code>U+003F</code>)</p></li><li class="listitem"><p>REVERSE SOLIDUS: <code class="literal">\</code> (<code>U+005C</code>)</p></li><li class="listitem"><p>DEL (<code>U+007F</code>)</p></li><li class="listitem"><p>C0 range (<code>U+0000 … U+001F</code>)</p></li><li class="listitem"><p>C1 range (<code>U+0080 … U+009F</code>)</p></li><li class="listitem"><p>Private Use Area (<code>U+E000 … U+F8FF</code>)</p></li><li class="listitem"><p>Non characters in Arabic Presentation Forms-A (<code>U+FDDO … U+FDEF</code>)</p></li><li class="listitem"><p>Specials (<code>U+FFF0 … U+FFFF</code>)</p></li><li class="listitem"><p>Tags and Variation Selectors Supplement (<code>U+E0000 … U+E0FFF</code>)</p></li><li class="listitem"><p>Supplementary Private Use Area-A (<code>U+F0000 … U+FFFFF</code>)</p></li><li class="listitem"><p>Supplementary Private Use Area-B (<code>U+100000 … U+10FFFF</code>) </p></li></ul></div></li><li class="listitem"><p id="ocf-fn-cs"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-cs">›</a> </span>File Names are case sensitive.</p></li><li class="listitem"><p id="ocf-fn-cn"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-cn">›</a> </span>All File Names within the same directory must be unique following case normalization as described in section 3.13 of <a class="biblioref" href="epub30-references.xhtml#refUnicode5" title="The Unicode Consortium. The Unicode Standard, Version 5.0.0, defined by: The Unicode Standard, Version 5.0 (Boston, MA, Addison-Wesley, 2007. ISBN 0-321-48091-0)">[<abbr>Unicode</abbr>]</a>. </p></li><li class="listitem"><p id="ocf-fn-an"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#ocf-fn-an">›</a> </span>All File Names within the same directory should be unique following NFC or NFD normalization <a class="biblioref" href="epub30-references.xhtml#refTR15" title="Unicode Normalization Forms">[<abbr>TR15</abbr>]</a>. </p></li></ul></div><div class="note" title="note"><h3 class="title">note</h3><p>Some commercial ZIP tools do not support the full Unicode range and may support only the ASCII range for File Names. Content creators who want to use ZIP tools that have these restrictions may find it is best to restrict their File Names to the ASCII range. If the names of files cannot be preserved during the unzipping process, it will be necessary to compensate for any name translation which took place when the files are referenced by URI from within the content.</p></div></section><section class="section" title="2.5 META-INF" id="sec-container-metainf"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf">›</a> </span>2.5 META-INF</h3><p>All OCF Abstract Containers must include a directory called <code class="filename">META-INF</code>. This directory contains the files specified below. Files other than the ones defined below may be included in the <code class="filename">META-INF</code> directory; <a class="glossterm" href="epub30-terminology.xhtml#gloss-ocf-processor" title="OCF Processor">OCF Processor</a>s must not fail when encountering such files.</p><section class="section" title="2.5.1 Container – META-INF/container.xml" id="sec-container-metainf-container.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-container.xml">›</a> </span>2.5.1 Container – META-INF/container.xml</h4><p>All OCF Containers must include a file called <code class="filename">container.xml</code> within the <code class="filename">META-INF</code> directory. The <code class="filename">container.xml</code> file must identify the media type of, and paths to, the root files for the EPUB Publications included within the container.</p><p>The <code class="filename">container.xml</code> file must not be encrypted.</p><p>The schema for <code class="filename">container.xml</code> files is available in <a class="xref" href="#app-schema-container" title="A.1 Schema for container.xml">Schema for <code class="filename">container.xml</code></a>; <code class="filename">container.xml</code> files must be valid according to this schema after removing all elements and attributes from other namespaces (including all attributes and contents of such elements).</p><p>The <code>rootfiles</code> element must contain one or more <code>rootfile</code> elements, each of which must uniquely reference a Package Document representing a single Publication. The Publications stored in an OCF should be different renditions of the same <a class="glossterm" href="epub30-terminology.xhtml#gloss-manifestation" title="Manifestation">Manifestation</a>. </p><p id="container-default-rendition">An OCF Processor must consider the first <code>rootfile</code> element within the <code>rootfiles</code> element to represent the default rendition for the contained Publication. Reading Systems are not required to use any rendition except the default one.</p><div class="informalexample"><p>The following example shows a sample <code class="filename">container.xml</code> for an EPUB Publication with the root file <code class="filename">OEBPS/My Crazy Life.opf</code> (the Package Document):</p><pre class="synopsis">
&lt;?xml version="1.0"?&gt;
&lt;container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;rootfiles&gt;
        &lt;rootfile full-path="OEBPS/My Crazy Life.opf"
            media-type="application/oebps-package+xml" /&gt;
    &lt;/rootfiles&gt;
&lt;/container&gt;
                    </pre></div><div class="informalexample"><p>The following example shows SVG and XHTML renditions of <em>The Sandman</em> bundled in the same container:</p><pre class="synopsis">
&lt;?xml version="1.0"?&gt;
&lt;container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;rootfiles&gt;
        &lt;rootfile full-path="SVG/Sandman.opf"
            media-type="application/oebps-package+xml" /&gt;
        &lt;rootfile full-path="XHTML/Sandman.opf"
            media-type="application/oebps-package+xml" /&gt;
    &lt;/rootfiles&gt;
&lt;/container&gt;
                    </pre></div><p>The <code>manifest</code> element contained within the <a class="glossterm" href="epub30-terminology.xhtml#gloss-package-document" title="Package Document">Package Document</a> specifies the one and only manifest used for EPUB processing. Ancillary manifest information contained in the ZIP archive or in the optional <code class="filename">manifest.xml</code> file must not be used for EPUB processing purposes. Any extra files in the ZIP archive must not be used in the processing of the EPUB Publication (i.e., files within the ZIP archive that are not listed within the Package Document's <code>manifest</code> element, such as <code class="filename">META-INF</code> files or alternate derived renditions of the Publication).</p><p>The value of the <code>full-path</code> attribute must contain a <code class="literal">path component</code> (as defined by <a class="biblioref" href="epub30-references.xhtml#refRFC3986" title="Uniform Resource Identifier (URI): Generic Syntax (RFC 3986)">RFC3986</a>) which must take the form of a <code class="literal">path-rootless</code> only (also defined by RFC 3986). The path components are relative to the root of the container in which they are used.</p><p><a class="glossterm" href="epub30-terminology.xhtml#gloss-ocf-processor" title="OCF Processor">OCF Processor</a>s must ignore foreign elements and attributes within a <code class="filename">container.xml</code> file.</p></section><section class="section" title="2.5.2 Encryption – META-INF/encryption.xml" id="sec-container-metainf-encryption.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-encryption.xml">›</a> </span>2.5.2 Encryption – META-INF/encryption.xml</h4><p>An optional <code class="filename">encryption.xml</code> file within the <code class="filename">META-INF</code> directory at the root level of the container file system holds all encryption information on the contents of the container. This file is an XML document whose root element is <code>encryption</code>. The <code>encryption</code> element contains child elements of type <code>EncryptedKey</code> and <code>EncryptedData</code> as defined by <a class="biblioref" href="epub30-references.xhtml#refXMLENCCORE" title="XML Encryption Syntax and Processing Version 1.1">[<abbr>XML ENC Core</abbr>]</a>. Each <code>EncryptedData</code> element describes how one or more files within the container are encrypted. Consequently, if any resource within the container is encrypted, <code class="filename">encryption.xml</code> must be present to indicate that the resource is encrypted and provide information on how it is encrypted.</p><p>An <code>EncryptedKey</code> element describes each encryption key used in the container, while an <code>EncryptedData</code> element describes each encrypted file. Each <code>EncryptedData</code> element refers to an <code>EncryptedKey</code> element, as described in XML Encryption.</p><p>The schema for <code class="filename">encryption.xml</code> files is available in <a class="xref" href="#app-schema-encryption" title="A.2 Schema for encryption.xml">Schema for <code class="filename">encryption.xml</code></a>; <code class="filename">encryption.xml</code> files must be valid according to this schema.</p><p>OCF encrypts individual files independently, trading off some security for improved performance, allowing the container contents to be incrementally decrypted. Encryption in this way exposes the directory structure and file naming of the whole package.</p><p>OCF uses XML Encryption <a class="biblioref" href="epub30-references.xhtml#refXMLENCCORE" title="XML Encryption Syntax and Processing Version 1.1">[<abbr>XML ENC Core</abbr>]</a> to provide a framework for encryption, allowing a variety of algorithms to be used. XML Encryption specifies a process for encrypting arbitrary data and representing the result in XML. Even though an OCF Abstract Container may contain non-XML data, XML Encryption can be used to encrypt all data in an OCF Abstract Container. OCF encryption supports only the encryption of entire files within the container, not parts of files. The <code class="filename">encryption.xml</code> file, if present, must not be encrypted.</p><p>Encrypted data replaces unencrypted data in an OCF Abstract Container. For example, if an image named <code class="filename">photo.jpeg</code> is encrypted, the contents of the <code class="filename">photo.jpeg</code> resource should be replaced by its encrypted contents. When stored in a ZIP container, streams of data must be compressed before they are encrypted and Deflate compression must be used. Within the ZIP directory, encrypted files should be stored rather than Deflate-compressed.</p><p> Some situations require obfuscating the storage of embedded fonts referenced by an EPUB Publication to tie them to the "parent" Publication and make them more difficult to extract for unrestricted use. In these cases, <code class="filename">encryption.xml</code> should be used to provide requisite font decoding information according to <a class="xref" href="#font-obfuscation" title="4 Font Obfuscation"><em>Font Obfuscation</em></a>. </p><p>The following files must never be encrypted, regardless of whether default or specific encryption is requested:</p><table class="simplelist"><tr><td><code class="filename">mimetype</code></td></tr><tr><td><code class="filename">META-INF/container.xml</code></td></tr><tr><td><code class="filename">META-INF/encryption.xml</code></td></tr><tr><td><code class="filename">META-INF/manifest.xml</code></td></tr><tr><td><code class="filename">META-INF/metadata.xml</code></td></tr><tr><td><code class="filename">META-INF/rights.xml</code></td></tr><tr><td><code class="filename">META-INF/signatures.xml</code></td></tr><tr><td><code class="filename">EPUB rootfile (the <a class="glossterm" href="epub30-terminology.xhtml#gloss-package-document" title="Package Document">Package Document</a>)</code></td></tr></table><p>Signed resources may subsequently be encrypted using the Decryption Transform for XML Signature <a class="biblioref" href="epub30-references.xhtml#refXMLSIGDecrypt" title="Decryption Transform for XML Signature">[<abbr>XML SIG Decrypt</abbr>]</a>. This feature enables an application such as an OCF agent to distinguish data that was encrypted before signing from data that was encrypted after signing. Only data that was encrypted after signing must be decrypted before computing the digest used to validate the signature.</p><div class="informalexample"><p>In the following example, adapted from <a href="http://www.w3.org/TR/2002/REC-xmlenc-core-20021210/#sec-eg-Symmetric-Key">Section 2.2.1 </a> of <a class="biblioref" href="epub30-references.xhtml#refXMLENCCORE" title="XML Encryption Syntax and Processing Version 1.1">[<abbr>XML ENC Core</abbr>]</a> the resource <code class="filename">image.jpeg</code> is encrypted using a symmetric key algorithm (AES) and the symmetric key is further encrypted using an asymmetric key algorithm (RSA) with a key of John Smith.</p><pre class="synopsis">
&lt;encryption
    xmlns ="urn:oasis:names:tc:opendocument:xmlns:container"
    xmlns:enc="http://www.w3.org/2001/04/xmlenc#"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;
    &lt;enc:EncryptedKey Id="EK"&gt;
        &lt;enc:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5"/&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:KeyName&gt;John Smith&lt;/ds:KeyName&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;enc:CipherData&gt;
            &lt;enc:CipherValue&gt;xyzabc&lt;/enc:CipherValue&gt;
        &lt;/enc:CipherData&gt;
    &lt;/enc:EncryptedKey&gt;
    &lt;enc:EncryptedData Id="ED1"&gt;
        &lt;enc:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#kw-aes128"/&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:RetrievalMethod URI="#EK"
                Type="http://www.w3.org/2001/04/xmlenc#EncryptedKey"/&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;enc:CipherData&gt;
            &lt;enc:CipherReference URI="image.jpeg"/&gt;
        &lt;/enc:CipherData&gt;
    &lt;/enc:EncryptedData&gt;
&lt;/encryption&gt;
                    </pre></div></section><section class="section" title="2.5.3 Manifest – META-INF/manifest.xml" id="sec-container-metainf-manifest.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-manifest.xml">›</a> </span>2.5.3 Manifest – META-INF/manifest.xml</h4><p>An optional file with the reserved name <code class="filename">manifest.xml</code> may be included within the <code class="filename">META-INF</code> directory at the root level of the container file system.</p><p>The <code class="filename">manifest.xml</code> file, if present, must not be encrypted.</p></section><section class="section" title="2.5.4 Metadata – META-INF/metadata.xml" id="sec-container-metainf-metadata.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-metadata.xml">›</a> </span>2.5.4 Metadata – META-INF/metadata.xml</h4><p>An optional file with the reserved name <code class="filename">metadata.xml</code> may be included within the <code class="filename">META-INF</code> directory at the root level of the container file system. This file, if present, must be used for container-level metadata. This version of the OCF specification does not specify any container-level metadata.</p><p>If the <code class="filename">META-INF/metadata.xml</code> file is present, its contents should be only namespace-qualified elements <a class="biblioref" href="epub30-references.xhtml#refXMLNamespaces" title="Namespaces in XML (Third Edition)">[<abbr>XMLNS</abbr>]</a> to avoid collision with future versions of OCF that may specify a particular format for this file.</p><p>The <code class="filename">metadata.xml</code> file, if present, must not be encrypted.</p></section><section class="section" title="2.5.5 Rights Management – META-INF/rights.xml" id="sec-container-metainf-rights.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-rights.xml">›</a> </span>2.5.5 Rights Management – META-INF/rights.xml</h4><p>An optional file with the reserved name <code class="filename">rights.xml</code> may be included within the <code class="filename">META-INF</code> directory at the root level of the container file system. This file is reserved for digital rights management (DRM) information for trusted exchange of Publications among rights holders, intermediaries, and users. This version of the OCF specification does not specify a required format for DRM information, but a future version may specify a particular format for DRM information.</p><p>If the <code class="filename">META-INF/rights.xml</code> file is present, its contents should be only namespace-qualified elements <a class="biblioref" href="epub30-references.xhtml#refXMLNamespaces" title="Namespaces in XML (Third Edition)">[<abbr>XMLNS</abbr>]</a> to avoid collision with future versions of OCF that may specify a particular format for this file.</p><p>The <code class="filename">rights.xml</code> file must not be encrypted.</p><p>When the <code class="filename">rights.xml</code> file is not present, the OCF container provides no information indicating any part of the container is rights governed.</p></section><section class="section" title="2.5.6 Digital Signatures – META-INF/signatures.xml" id="sec-container-metainf-signatures.xml"><h4 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-metainf-signatures.xml">›</a> </span>2.5.6 Digital Signatures – META-INF/signatures.xml</h4><p>An optional <code class="filename">signatures.xml</code> within the <code class="filename">META-INF</code> directory at the root level of the container file system holds digital signatures of the container and its contents. This file is an XML document whose root element is <code>signatures</code>. The <code>signatures</code> element contains child elements of type <code>Signature</code> as defined by <a class="biblioref" href="epub30-references.xhtml#refXMLDSIGCORE" title="XML-Signature Syntax and Processing Version 1.1">[<abbr>XML DSIG Core</abbr>]</a>. Signatures can be applied to the Publication and any alternate renditions as a whole or to parts of the Publication and renditions. XML Signature can specify the signing of any kind of data, not just XML.</p><p>The <code class="filename">signatures.xml</code> file must not be encrypted.</p><p>When the <code class="filename">signatures.xml</code> file is not present, the OCF container provides no information indicating any part of the container is digitally signed at the container level. It is possible that digital signing exists within any optional alternate contained renditions, however.</p><p>The schema for <code class="filename">signatures.xml</code> files is available in <a class="xref" href="#app-schema-signatures" title="A.3 Schema for signatures.xml">Schema for <code class="filename">signatures.xml</code></a>; <code class="filename">signatures.xml</code> files must be valid according to this schema.</p><p>When an OCF agent creates a signature of data in a container, it should add the new signature as the last child <code>Signature</code> element of the <code>signatures</code> element in the <code class="filename">signatures.xml</code> file.</p><div class="note" title="note"><h3 class="title">note</h3><p>Each <code>Signature</code> in the <code class="filename">signatures.xml</code> file identifies by IRI the data to which the signature applies, using the XML Signature <code>Manifest</code> element and its <code>Reference</code> sub-elements. Individual contained files may be signed separately or together. Separately signing each file creates a digest value for the resource that can be validated independently. This approach may make a Signature element larger. If files are signed together, the set of signed files can be listed in a single XML Signature <code>Manifest</code> element and referenced by one or more <code>Signature</code> elements.</p></div><p>Any or all files in the container can be signed in their entirety with the exception of the <code class="filename">signatures.xml</code> file since that file will contain the computed signature information. Whether and how the <code class="filename">signatures.xml</code> file should be signed depends on the objective of the signer.</p><p>If the signer wants to allow signatures to be added or removed from the container without invalidating the signer’s signature, the <code class="filename">signatures.xml</code> file should not be signed.</p><p>If the signer wants any addition or removal of a signature to invalidate the signer’s signature, the Enveloped Signature transform (defined in <a href="http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-EnvelopedSignature">Section 6.6.4</a> of <a class="biblioref" href="epub30-references.xhtml#refXMLDSIGCORE" title="XML-Signature Syntax and Processing Version 1.1">[<abbr>XML DSIG Core</abbr>]</a>) can be used to sign the entire preexisting signature file excluding the <code>Signature</code> being created. This transform would sign all previous signatures, and it would become invalid if a subsequent signature was added to the package.</p><p>If the signer wants the removal of an existing signature to invalidate the signer’s signature but also wants to allow the addition of signatures, an XPath transform can be used to sign just the existing signatures. (This is only a suggestion. The particular XPath transform is not a part of the OCF specification.)</p><p>XML-Signature does not associate any semantics with a signature; an agent may include semantic information, for example, by adding information to the Signature element that describes the signature. XML Signature describes how additional information can be added to a signature (for example, by using the <code>SignatureProperties</code> element).</p><div class="informalexample"><p>The following XML expression shows the content of an example <code class="filename">signatures.xml</code> file, and is based on the examples found in <a href="http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-Overview">Section 2</a> of <a class="biblioref" href="epub30-references.xhtml#refXMLDSIGCORE" title="XML-Signature Syntax and Processing Version 1.1">[<abbr>XML DSIG Core</abbr>]</a>. It contains one signature, and the signature applies to two resources, <code class="filename">OEBFPS/book.html</code> and <code class="filename">OEBFPS/images/cover.jpeg</code>, in the container.</p><pre class="synopsis">
&lt;signatures xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;Signature Id="sig" xmlns="http://www.w3.org/2000/09/xmldsig#"&gt;
        &lt;SignedInfo&gt;
            &lt;CanonicalizationMethod 
                Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
            &lt;SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/&gt;
            &lt;Reference URI="#Manifest1"&gt;
                &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                &lt;DigestValue&gt;j6lwx3rvEPO0vKtMup4NbeVu8nk=&lt;/DigestValue&gt;
            &lt;/Reference&gt;
        &lt;/SignedInfo&gt;
        &lt;SignatureValue&gt;…&lt;/SignatureValue&gt;
        &lt;KeyInfo&gt;
            &lt;KeyValue&gt;
                &lt;DSAKeyValue&gt;
                    &lt;P&gt;…&lt;/P&gt;&lt;Q&gt;…&lt;/Q&gt;&lt;G&gt;…&lt;/G&gt;&lt;Y&gt;…&lt;/Y&gt; 
                &lt;/DSAKeyValue&gt;
            &lt;/KeyValue&gt;
        &lt;/KeyInfo&gt;
        &lt;Object&gt;
            &lt;Manifest Id="Manifest1"&gt;
                &lt;Reference URI="OEBFPS/book.xml"&gt;                    
                    &lt;Transforms&gt;                                                
                        &lt;Transform
                            Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;                        
                    &lt;/Transforms&gt;
                    &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                    &lt;DigestValue&gt;&lt;/DigestValue&gt;
                &lt;/Reference&gt;
                &lt;Reference URI="OEBFPS/images/cover.jpeg"&gt;
                    &lt;Transforms&gt;                                                
                        &lt;Transform
                            Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;                        
                    &lt;/Transforms&gt;
                    &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                    &lt;DigestValue&gt;&lt;/DigestValue&gt;
                &lt;/Reference&gt;
            &lt;/Manifest&gt;
        &lt;/Object&gt;
    &lt;/Signature&gt; 
&lt;/signatures&gt;
                    </pre></div></section></section></section><section class="chapter" title="3 OCF ZIP Container" id="physical-container-zip"><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#physical-container-zip">›</a> </span>3 OCF ZIP Container</h2><section class="section" title="3.1 Overview" id="sec-container-zip-overview"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-container-zip-overview">›</a> </span>3.1 Overview</h3><p class="informative"> This section is informative</p><p>An OCF ZIP Container is a physical single-file manifestation of an <a href="#sec-container-abstract" title="2 OCF Abstract Container">abstract container</a>. </p></section><section class="section" title="3.2 ZIP File Requirements" id="sec-zip-container-zipreqs"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-zip-container-zipreqs">›</a> </span>3.2 ZIP File Requirements</h3><p>An OCF ZIP Container uses the ZIP format as specified by <a class="biblioref" href="epub30-references.xhtml#refZIP" title="ZIP File Format Specification">[<abbr>ZIP APPNOTE</abbr>]</a>, but with the following constraints and clarifications:</p><div class="conformance-list"><ul class="conformance-list"><li class="listitem"><p id="confreq-zip-abstr"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-abstr">›</a> </span>The contents of the OCF ZIP Container must be a conforming <a href="#sec-container-abstract" title="2 OCF Abstract Container">abstract container</a>. </p></li><li class="listitem"><p id="confreq-zip-mult"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-mult">›</a> </span>OCF ZIP Containers must not use the features in the ZIP application note that allow ZIP files to be split across multiple storage media. <a class="glossterm" href="epub30-terminology.xhtml#gloss-ocf-processor" title="OCF Processor">OCF Processor</a>s must treat any OCF files that specify that the ZIP file is split across multiple storage media as being in error.</p></li><li class="listitem"><p id="confreq-zip-comp"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-comp">›</a> </span>OCF ZIP Containers must include only uncompressed files or Deflate-compressed files within the ZIP archive. OCF Processors must treat any OCF Containers that use compression techniques other than Deflate as being in error. </p></li><li class="listitem"><p id="confreq-zip-64"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-64">›</a> </span>OCF ZIP Containers may use the ZIP64 extensions defined as "Version 1" in section V, subsection G of the application note at <a class="biblioref" href="epub30-references.xhtml#refZIP" title="ZIP File Format Specification">[<abbr>ZIP APPNOTE</abbr>]</a> and should use only those extensions when the content requires them. OCF Processors must support the ZIP64 extensions defined as "Version 1".</p></li><li class="listitem"><p id="confreq-zip-enc"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-enc">›</a> </span>OCF ZIP Containers must not use the encryption features defined by the ZIP format; instead, encryption must be done using the features described in <a class="xref" href="#sec-container-metainf-encryption.xml" title="2.5.2 Encryption – META-INF/encryption.xml">Encryption – META-INF/encryption.xml</a>. OCF Processors must treat any other OCF ZIP Containers that use ZIP encryption features as being in error.</p></li><li class="listitem"><p id="confreq-zip-preserve"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-preserve">›</a> </span>It is not a requirement that OCF Processors preserve information from an OCF ZIP Container through load and save operations that is not defined within the OCF Abstract Container; in particular, an OCF Processor does not have to preserve CRC values, comment fields or fields that hold file system information corresponding to a particular operating system (e.g., <code>External file attributes</code> and <code>Extra field</code>).</p></li><li class="listitem"><p id="confreq-zip-utf8"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-utf8">›</a> </span>OCF ZIP Containers must encode File System Names using UTF-8 <a class="biblioref" href="epub30-references.xhtml#refUnicode5" title="The Unicode Consortium. The Unicode Standard, Version 5.0.0, defined by: The Unicode Standard, Version 5.0 (Boston, MA, Addison-Wesley, 2007. ISBN 0-321-48091-0)">[<abbr>Unicode</abbr>]</a>. </p></li></ul></div><p>The following constraints apply to particular fields in the OCF ZIP Container archive:</p><div class="conformance-list"><ul class="conformance-list"><li class="listitem"><p id="confreq-zip-fld-version"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-fld-version">›</a> </span>In the local file header table, OCF ZIP Containers must set the <code>version needed to extract</code> fields to the values <code>10</code>, <code>20</code> or <code>45</code> in order to match the maximum version level needed by the given file (e.g., <code>20</code> if Deflate is needed, <code>45</code> if ZIP64 is needed). OCF Processors must treat any other values as being in error.</p></li><li class="listitem"><p id="confreq-zip-fld-comp"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-fld-comp">›</a> </span>In the local file header table, OCF ZIP Containers must set the <code>compression</code> method field to the values <code>0</code> or <code>8</code>. OCF Processors must treat any other values as being in error.</p></li><li class="listitem"><p id="confreq-zip-fld-er"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#confreq-zip-fld-er">›</a> </span>OCF Processors must treat OCF ZIP Containers with an <code>Archive decryption header</code> or an <code>Archive extra data record</code> as being in error.</p></li></ul></div></section><section class="section" title="3.3 OCF ZIP Container Media Type Identification" id="sec-zip-container-mime"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#sec-zip-container-mime">›</a> </span>3.3 OCF ZIP Container Media Type Identification</h3><p>OCF ZIP Containers must include a <code class="filename">mimetype</code> file as the first file in the Container, and the contents of this file must be the MIME type string <code class="literal">application/epub+zip</code>.</p><p>The contents of the <code class="filename">mimetype</code> file must not contain any leading padding or whitespace, must not begin with the Unicode signature (or Byte Order Mark), and the case of the MIME type string must be exactly as presented above. The <code class="filename">mimetype</code> file additionally must be neither compressed nor encrypted, and there must not be an extra field in its ZIP header.</p><div class="note" title="note"><h3 class="title">note</h3><p>Refer to <a class="xref" href="#app-media-type" title="Appendix C. The application/epub+zip Media Type">Appendix C, <em>The <code>application/epub+zip</code> Media Type</em></a> for further information about the <code class="literal">application/epub+zip</code> media type.</p></div></section></section><section class="chapter" title="4 Font Obfuscation" id="font-obfuscation"><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#font-obfuscation">›</a> </span>4 Font Obfuscation</h2><section class="section" title="4.1 Introduction" id="fobfus-intro"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#fobfus-intro">›</a> </span>4.1 Introduction</h3><p class="informative"> This section is informative</p><p>Since an OCF Zip Container is fundamentally a ZIP file, commonly available ZIP tools can be used to extract any unencrypted content stream from the package. On some systems, the contents of the ZIP file may appear like any other native container (e.g., a folder). While the ability to do this is quite useful, it can pose a problem for an <a class="glossterm" href="epub30-terminology.xhtml#gloss-author" title="Author">Author</a> who wishes to include a third-party font.</p><p>Many commercial fonts allow embedding, but embedding a font implies making it an integral part of the Publication, not providing the original font file along with the content. Since integrated ZIP support is so ubiquitous in modern operating systems, simply placing the font in the ZIP archive is insufficient to signify that the font is not intended to be reused in other contexts. This uncertainty can undermine the otherwise very useful font embedding capability of EPUB Publications.</p><p>In order to discourage reuse of the font, some font vendors may allow use of their fonts in EPUB Publications if those fonts are bound in some way to the Publication. That is, if the font file cannot be installed directly for use on an operating system with the built-in tools of that computing device, and it cannot be directly used by other EPUB Publications. </p><p>It is beyond the scope of this document to provide a digital rights management or enforcement system for font files. It instead defines a method of obfuscation that will require additional work on the part of the final OCF recipient to gain general access to any included fonts. It is the hope of the IDPF that this will meet the requirements of most font vendors. No claim is made in this document or by the IDPF, that this constitutes encryption, nor does it guarantee that the font file will be secure from copyright infringement. The defined mechanism will simply provide a stumbling block for those who are unaware of the license details of the supplied font. It will not prevent a determined user from gaining full access to the font. Given an OCF Container, it is possible to apply the algorithms defined to extract the raw font file. Whether this satisfies the requirements of individual font licenses remains a question for the licensor and licensee. </p></section><section class="section" title="4.2 Obfuscation Algorithm" id="fobfus-algorithm"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#fobfus-algorithm">›</a> </span>4.2 Obfuscation Algorithm</h3><p>The algorithm employed to obfuscate the font file consists of modifying the first 1040 bytes (~1KB) of the font file. In the unlikely event that the file is less than 1040 bytes, then the entire file will be modified. The key for the algorithm is generated using the instructions as given in the section <a class="xref" href="#fobfus-keygen" title="4.3 Generating the Obfuscation Key">Generating the Obfuscation Key</a>. To obfuscate the original data, the result of performing a logical exclusive or (XOR) on the first byte of the raw file and the first byte of the key is stored as the first byte of the embedded font file. This process is repeated with the next byte of source and key, until all bytes in the key have been used. At this point, the process continues starting with the first byte of the key and 21st byte of the source. Once 1040 bytes have been encoded in this way (or the end of the source is reached), any remaining data in the source is directly copied to the destination. In pseudo-code, this is the algorithm: </p><pre class="programlisting">
set source to font file
set destination to obfuscated file
set keyData to key for font
set outer to 0
while outer &lt; 52 and not (source at EOF)
    set inner to 0
    while inner &lt; 20 and not (source at EOF)
        read 1 byte from source     //Assumes read advances file position
        set sourceByte to result of read
        set keyByte to byte inner of keyData
        set obfuscatedByte to (sourceByte XOR keyByte)
        write obfuscatedByte to destination
        increment inner
    end while
    increment outer
end while
if not (source at EOF) then
    read source to EOF
    write result of read to destination
end if 
            </pre><p>To get the original font data back, the process is simply reversed. That is, the source file becomes the obfuscated data and the destination file will contain the raw font data.</p></section><section class="section" title="4.3 Generating the Obfuscation Key" id="fobfus-keygen"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#fobfus-keygen">›</a> </span>4.3 Generating the Obfuscation Key</h3><p>The key used in the obfuscation algorithm is derived from unique identifer(s) of the Publication(s) in the Container, as required by the EPUB Publications 3.0 specification and detailed in <span class="phrase"><a href="epub30-publications.xhtml#sec-opf-metadata-identifiers-uid">Unique Identifier</a> <a class="biblioref" href="epub30-references.xhtml#refPublications3" title="EPUB Publications 3.0">[<abbr>Publications30</abbr>]</a></span>. In order to create the key, the unique identifiers of all Publications contained in the container must be concatenated in the order that the Publications appear in <code>container.xml</code> and a space (Unicode code point <code>U+0020</code>) inserted between each identifier. Before generating this string, all whitespace characters as defined by the XML 1.0 specification <a class="biblioref" href="epub30-references.xhtml#refXML" title="Extensible Markup Language (XML) 1.0 (Fifth Edition)">[<abbr>XML</abbr>]</a>, section 2.3 are removed from the individual identifiers. Specifically the Unicode code points <code>U+0020</code>, <code>U+0009</code>, <code>U+000D</code> and <code>U+000A</code> must be stripped from each identifier before it is added to the concanenated space-delimited string. An SHA-1 digest of the UTF-8 representation of this string should be generated as specified by the Secure Hash Standard <a class="biblioref" href="epub30-references.xhtml#refSHA1" title="Federal Information Processing Standards Publication 180-3: Secure Hash Standard (SHS)">[<abbr>SHA-1</abbr>]</a>. This digest is then directly used as the key for the algorithm described in <a class="xref" href="#fobfus-algorithm" title="4.2 Obfuscation Algorithm">Obfuscation Algorithm</a>. </p></section><section class="section" title="4.4 Specifying Obfuscated Resources" id="fobfus-specifying"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#fobfus-specifying">›</a> </span>4.4 Specifying Obfuscated Resources</h3><p>All encrypted data in an OCF Abstract Container must have an entry in the <code class="filename">encryption.xml</code> file accompanying the Publication (see <a class="xref" href="#sec-container-metainf-encryption.xml" title="2.5.2 Encryption – META-INF/encryption.xml">Encryption – META-INF/encryption.xml</a>), which includes fonts obfuscated using the method described here. For such obfuscated fonts, in the <code class="filename">encryption.xml</code> file, the <code>EncryptionMethod</code> element child of the <code>EncryptedData</code> must have an <code>Algorithm</code> attribute with the value <code>http://www.idpf.org/2008/embedding</code>. The presence of this attribute signals the use of the algorithm described in this specification. All resources that have been obfuscated using this approach must be listed in the <code>CipherData</code> element.</p><div class="informalexample"><p>An example <code class="filename">encryption.xml</code> file might look like this:</p><pre class="synopsis">
&lt;encryption &#x0D;
    xmlns="urn:oasis:names:tc:opendocument:xmlns:container" &#x0D;
    xmlns:enc="http://www.w3.org/2001/04/xmlenc#"&gt;&#x0D;
    &lt;enc:EncryptedData&gt; &#x0D;
        &lt;enc:EncryptionMethod Algorithm="http://www.idpf.org/2008/embedding"/&gt; &#x0D;
        &lt;enc:CipherData&gt; &#x0D;
            &lt;enc:CipherReference URI="OEBPS/Fonts/BKANT.TTF"/&gt;  &#x0D;
        &lt;/enc:CipherData&gt; &#x0D;
    &lt;/enc:EncryptedData&gt;  &#x0D;
&lt;/encryption&gt; &#x0D;

                </pre></div><p>To prevent trivial copying of the embedded font to other Publications, the explicit key must not be provided in the <code class="filename">encryption.xml</code> file. Reading systems must derive the key from the package's <a class="glossterm" href="epub30-terminology.xhtml#gloss-unique-identifier" title="Unique Identifier">Unique Identifier</a>. </p></section></section><div class="appendix" title="Appendix A. Schemas" id="app-schemas"><div class="titlepage"><div><div><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#app-schemas">›</a> </span>Appendix A. Schemas</h2></div></div></div><p>The schemas in this Appendix are normative.</p><section class="section" title="A.1 Schema for container.xml" id="app-schema-container"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#app-schema-container">›</a> </span>A.1 Schema for <code class="filename">container.xml</code></h3><p>The schema for <code class="filename">container.xml</code> files is available at <a href="http://idpf.org/epub/30/schema/ocf-container-30.rnc">http://www.idpf.org/epub/30/schema/ocf-container-30.rnc</a>. </p></section><section class="section" title="A.2 Schema for encryption.xml" id="app-schema-encryption"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#app-schema-encryption">›</a> </span>A.2 Schema for <code class="filename">encryption.xml</code></h3><p>The schema for <code class="filename">encryption.xml</code> files is available at <a href="http://idpf.org/epub/30/schema/ocf-encryption-30.rnc">http://www.idpf.org/epub/30/schema/ocf-encryption-30.rnc</a>. It is based on schemas in <a class="biblioref" href="epub30-references.xhtml#refXMLSecRngSchemas" title="XML Security RELAX NG Schemas">[<abbr>XML Sec RNG Schemas</abbr>]</a>. </p></section><section class="section" title="A.3 Schema for signatures.xml" id="app-schema-signatures"><h3 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#app-schema-signatures">›</a> </span>A.3 Schema for <code class="filename">signatures.xml</code></h3><p>The schema for <code class="filename">signatures.xml</code> files is available at <a href="http://idpf.org/epub/30/schema/ocf-signatures-30.rnc">http://www.idpf.org/epub/30/schema/ocf-signatures-30.rnc</a>. It is based on schemas in <a class="biblioref" href="epub30-references.xhtml#refXMLSecRngSchemas" title="XML Security RELAX NG Schemas">[<abbr>XML Sec RNG Schemas</abbr>]</a>. </p></section></div><div class="appendix" title="Appendix B. Example" id="example"><div class="titlepage"><div><div><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example">›</a> </span>Appendix B. Example</h2></div></div></div><p>The following example demonstrates the use of this OCF format to contain a signed and encrypted EPUB Publication within a ZIP Container.</p><div class="example" title="Example B.1. Ordered list of files in the ZIP Container" id="example-files"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-files">›</a> </span><p class="title"><strong>Example B.1. Ordered list of files in the ZIP Container</strong></p><div class="example-contents"><pre class="synopsis">
mimetype
META-INF/container.xml
META-INF/signatures.xml
META-INF/encryption.xml
OEBPS/As You Like It.opf
OEBPS/book.html
OEBPS/nav.html
OEBPS/toc.ncx
OEBPS/images/cover.png</pre></div></div><br class="example-break"/><div class="example" title="Example B.2. The contents of the mimetype file" id="example-mimetype"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-mimetype">›</a> </span><p class="title"><strong>Example B.2. The contents of the <code class="filename">mimetype</code> file</strong></p><div class="example-contents"><pre class="synopsis">application/epub+zip</pre></div></div><br class="example-break"/><div class="example" title="Example B.3. The contents of the META-INF/container.xml file" id="example-container"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-container">›</a> </span><p class="title"><strong>Example B.3. The contents of the <code class="filename">META-INF/container.xml</code> file</strong></p><div class="example-contents"><pre class="synopsis">&lt;?xml version="1.0"?&gt;
&lt;container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;rootfiles&gt;
        &lt;rootfile full-path="OEBPS/As You Like It.opf"
            media-type="application/oebps-package+xml" /&gt;
    &lt;/rootfiles&gt;
&lt;/container&gt;</pre></div></div><br class="example-break"/><div class="example" title="Example B.4. The contents of the META-INF/signatures.xml file" id="example-signatures"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-signatures">›</a> </span><p class="title"><strong>Example B.4. The contents of the <code class="filename">META-INF/signatures.xml</code> file</strong></p><div class="example-contents"><pre class="synopsis">&lt;signatures xmlns="urn:oasis:names:tc:opendocument:xmlns:container"&gt;
    &lt;Signature Id="AsYouLikeItSignature" xmlns="http://www.w3.org/2000/09/xmldsig#"&gt;
        
        &lt;!-- SignedInfo is the information that is actually signed. In this case --&gt;
        &lt;!-- the SHA1 algorithm is used to sign the canonical form of the XML    --&gt;
        &lt;!-- documents enumerated in the Object element below                    --&gt;
        &lt;SignedInfo&gt;
            &lt;CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
            &lt;SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/&gt;
            &lt;Reference URI="#AsYouLikeIt"&gt;
                &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                &lt;DigestValue&gt;…&lt;/DigestValue&gt;
            &lt;/Reference&gt;
        &lt;/SignedInfo&gt;
        
        &lt;!-- The signed value of the digest above using the DSA algorithm --&gt;
        &lt;SignatureValue&gt;…&lt;/SignatureValue&gt;
        
        &lt;!-- The key to use to validate the signature --&gt;
        &lt;KeyInfo&gt;
            &lt;KeyValue&gt;
                &lt;DSAKeyValue&gt;
                    &lt;P&gt;…&lt;/P&gt;
                    &lt;Q&gt;…&lt;/Q&gt;
                    &lt;G&gt;…&lt;/G&gt;
                    &lt;Y&gt;…&lt;/Y&gt;
                &lt;/DSAKeyValue&gt;
            &lt;/KeyValue&gt;
        &lt;/KeyInfo&gt;
        
        &lt;!-- The list documents to sign. Note that the canonical form of XML   --&gt;
        &lt;!-- documents is signed while the binary form of the other documents --&gt;
        &lt;!-- is used --&gt;
        &lt;Object&gt;
            &lt;Manifest Id="AsYouLikeIt"&gt;
                &lt;Reference URI="OEBPS/As You Like It.opf"&gt;
                    &lt;Transforms&gt;
                        &lt;Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
                    &lt;/Transforms&gt;
                    &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                    &lt;DigestValue&gt;&lt;/DigestValue&gt;
                &lt;/Reference&gt;
                &lt;Reference URI="OEBPS/book.html"&gt;
                    &lt;Transforms&gt;
                        &lt;Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
                    &lt;/Transforms&gt;
                    &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                    &lt;DigestValue&gt;&lt;/DigestValue&gt;
                &lt;/Reference&gt;
                &lt;Reference URI="OEBPS/images/cover.png"&gt;
                    &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
                    &lt;DigestValue&gt;&lt;/DigestValue&gt;
                &lt;/Reference&gt;
            &lt;/Manifest&gt;
        &lt;/Object&gt;        
    &lt;/Signature&gt;
&lt;/signatures&gt;</pre></div></div><br class="example-break"/><div class="example" title="Example B.5. The contents of the META-INF/encryption.xml file" id="example-encryption"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-encryption">›</a> </span><p class="title"><strong>Example B.5. The contents of the <code class="filename">META-INF/encryption.xml</code> file</strong></p><div class="example-contents"><pre class="synopsis">&lt;?xml version="1.0"?&gt;
&lt;encryption xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
    xmlns:enc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;

    &lt;!-- The RSA encrypted AES-128 symmetric key used to encrypt the data --&gt;
    &lt;enc:EncryptedKey Id="EK"&gt;
        &lt;enc:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5"/&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:KeyName&gt;John Smith&lt;/ds:KeyName&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;enc:CipherData&gt;
            &lt;enc:CipherValue&gt;xyzabc…&lt;/enc:CipherValue&gt;
        &lt;/enc:CipherData&gt;
    &lt;/enc:EncryptedKey&gt;

    &lt;!-- Each EncryptedData block identifies a single document that has been    --&gt;
    &lt;!-- encrypted using the AES-128 algorithm. The data remains stored in it’s --&gt;
    &lt;!-- encrypted form in the original file within the container.              --&gt;
    &lt;enc:EncryptedData Id="ED1"&gt;
        &lt;enc:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#kw-aes128"/&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:RetrievalMethod URI="#EK" Type="http://www.w3.org/2001/04/xmlenc#EncryptedKey"/&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;enc:CipherData&gt;
            &lt;enc:CipherReference URI="OEBPS/book.html"/&gt;
        &lt;/enc:CipherData&gt;
    &lt;/enc:EncryptedData&gt;

    &lt;enc:EncryptedData Id="ED2"&gt;
        &lt;enc:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#kw-aes128"/&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:RetrievalMethod URI="#EK" Type="http://www.w3.org/2001/04/xmlenc#EncryptedKey"/&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;enc:CipherData&gt;
            &lt;enc:CipherReference URI="OEBPS/images/cover.png"/&gt;
        &lt;/enc:CipherData&gt;
    &lt;/enc:EncryptedData&gt;

&lt;/encryption&gt;</pre></div></div><br class="example-break"/><div class="example" title="Example B.6. The contents of the OEBPS/As You Like It.opf file" id="example-opf"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#example-opf">›</a> </span><p class="title"><strong>Example B.6. The contents of the <code class="filename">OEBPS/As You Like It.opf</code> file</strong></p><div class="example-contents"><pre class="synopsis">&lt;?xml version="1.0"?&gt;
&lt;package version="3.0" 
         xml:lang="en"
         xmlns="http://www.idpf.org/2007/opf" 
         unique-identifier="pub-id"&gt;
    
    &lt;metadata xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;
        &lt;dc:identifier 
              id="pub-id"&gt;urn:uuid:B9B412F2-CAAD-4A44-B91F-A375068478A0&lt;/dc:identifier&gt;
        &lt;meta refines="#pub-id" 
              property="identifier-type" 
              scheme="xsd:string"&gt;uuid&lt;/meta&gt;
        
        &lt;dc:language&gt;en&lt;/dc:language&gt;
        
        &lt;dc:title&gt;As You Like It&lt;/dc:title&gt;
        
        &lt;dc:creator id="creator"&gt;William Shakespeare&lt;/dc:creator&gt;
        &lt;meta refines="#creator" 
              property="role" 
              scheme="marc:relators"&gt;aut&lt;/meta&gt;
        
        &lt;meta property="dcterms:modified"&gt;2000-03-24T00:00:00Z&lt;/meta&gt;
        
        &lt;dc:publisher&gt;Project Gutenberg&lt;/dc:publisher&gt;
        
        &lt;dc:date&gt;2000-03-24&lt;/dc:date&gt;
        
        &lt;meta property="dcterms:dateCopyrighted"&gt;9999-01-01&lt;/meta&gt;
        
        &lt;dc:identifier 
              id="isbn13"&gt;urn:isbn:9780741014559&lt;/dc:identifier&gt;
        &lt;meta refines="#isbn13" 
              property="identifier-type" 
              scheme="onix:codelist5"&gt;15&lt;/meta&gt;
        
        &lt;dc:identifier id="isbn10"&gt;0-7410-1455-6&lt;/dc:identifier&gt;
        &lt;meta refines="#isbn10" 
              property="identifier-type" 
              scheme="onix:codelist5"&gt;2&lt;/meta&gt;
        
        &lt;link rel="xml-signature" 
              href="../META-INF/signatures.xml#AsYouLikeItSignature"/&gt;
    &lt;/metadata&gt;
    
    &lt;manifest&gt;
        &lt;item id="r4915" 
              href="book.html" 
              media-type="application/xhtml+xml"/&gt;
        &lt;item id="r7184" 
              href="images/cover.png" 
              media-type="image/png"/&gt;
        &lt;item id="nav" 
              href="nav.html" 
              media-type="application/xhtml+xml" 
              properties="nav"/&gt;
        &lt;item id="ncx" 
              href="toc.ncx" 
              media-type="application/x-dtbncx+xml"/&gt;
    &lt;/manifest&gt;
    
    &lt;spine toc="ncx"&gt;
        &lt;itemref idref="r4915"/&gt;
    &lt;/spine&gt;
&lt;/package&gt;
</pre></div></div><br class="example-break"/></div><div class="appendix" title="Appendix C. The application/epub+zip Media Type" id="app-media-type"><div class="titlepage"><div><div><h2 class="title"><span class="link-marker"><a class="hidden-reveal" title="Link here" href="#app-media-type">›</a> </span>Appendix C. The <code>application/epub+zip</code> Media Type</h2></div></div></div><p>This appendix registers the media type <code class="literal">application/epub+zip</code> for the EPUB Open Container Format (OCF).</p><p>An OCF file is a container technology based on the ZIP archive format. It is used to encapsulate EPUB Publications and optional alternate renditions thereof. OCF and its related standards are maintained and defined by the International Digital Publishing Forum (IDPF).</p><div class="variablelist"><dl><dt class="varlistentry"><span class="term">MIME media type name:</span></dt><dd><p><code class="literal">application</code></p></dd><dt class="varlistentry"><span class="term">MIME subtype name:</span></dt><dd><p><code class="literal">epub+zip</code></p></dd><dt class="varlistentry"><span class="term">Required parameters:</span></dt><dd><p>None.</p></dd><dt class="varlistentry"><span class="term">Optional parameters:</span></dt><dd><p>None.</p></dd><dt class="varlistentry"><span class="term">Encoding considerations:</span></dt><dd><p>OCF files are binary files in ZIP (<a href="http://www.iana.org/assignments/media-types/application/zip">http://www.iana.org/assignments/media-types/application/zip</a>) format.</p></dd><dt class="varlistentry"><span class="term">Security considerations:</span></dt><dd><p>All processors that read OCF files should rigorously check the size and validity of data retrieved.</p><p>In addition, because of the various content types that can be embedded in OCF files, it is possible that <code class="literal">application/epub+zip</code> may describe content that has security implications beyond those described here. However, only in the case where the processor recognizes and processes the additional content, or where further processing of that content is dispatched to other processors, would security issues potentially arise. And in that case, they would fall outside the domain of this registration document.</p><p>Security considerations that apply to <a href="http://www.iana.org/assignments/media-types/application/zip">application/zip</a> also apply to OCF files.</p></dd><dt class="varlistentry"><span class="term">Interoperability considerations:</span></dt><dd><p>None.</p></dd><dt class="varlistentry"><span class="term">Published specification:</span></dt><dd><p>This media type registration is for the EPUB Open Container Format (OCF), as described by the EPUB Open Container Format (OCF) 3.0 specification located at <a href="http://www.idpf.org/epub/30/spec/epub30-ocf.html">http://www.idpf.org/epub/30/spec/epub30-ocf.html</a>. </p><p>The EPUB OCF 3.0 specification supersedes the Open Container Format 2.0.1 specification, which is located at <a href="http://www.idpf.org/doc_library/epub/OCF_2.0.1_draft.doc">http://www.idpf.org/doc_library/epub/OCF_2.0.1_draft.doc</a> and which also uses the <code class="literal">application/epub+zip</code> media type.</p></dd><dt class="varlistentry"><span class="term">Applications which use this media type:</span></dt><dd><p>This media type is in wide use for the distribution of ebooks in the EPUB format. The following list of applications is not exhaustive.</p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>Adobe Digital Editions</p></li><li class="listitem"><p>Aldiko</p></li><li class="listitem"><p>Azardi</p></li><li class="listitem"><p>Apple iBooks</p></li><li class="listitem"><p>Barnes &amp; Noble Nook</p></li><li class="listitem"><p>Calibre</p></li><li class="listitem"><p>Google Books</p></li><li class="listitem"><p>Ibis Reader</p></li><li class="listitem"><p>MobiPocket reader</p></li><li class="listitem"><p>Sony Reader</p></li><li class="listitem"><p>Stanza</p></li></ul></div></dd><dt class="varlistentry"><span class="term">Additional information:</span></dt><dd><div class="variablelist"><dl><dt class="varlistentry"><span class="term">Magic number(s):</span></dt><dd><p>0: <code>PK 0x03 0x04</code>, 30: <code>mimetype</code>, 38: <code>application/epub+zip</code></p></dd><dt class="varlistentry"><span class="term">File extension(s):</span></dt><dd><p>OCF files are most often identified with the extension <code class="filename">.epub</code>.</p></dd><dt class="varlistentry"><span class="term">Macintosh File Type Code(s):</span></dt><dd><p>ZIP</p></dd><dt class="varlistentry"><span class="term">Fragment Identifiers:</span></dt><dd><p>The IDPF maintains a registry of linking schemes at <a href="http://idpf.org/epub/linking/">http://idpf.org/epub/linking/</a>. Some of these schemes define custom fragment identifiers that resolve to <code class="literal">application/epub+zip</code> and <code class="literal">application/oebps-package+xml</code> documents.</p></dd></dl></div></dd><dt class="varlistentry"><span class="term">Person &amp; email address to contact for further information:</span></dt><dd><p>William McCoy, <a href="mailto:bmccoy@idpf.org">bmccoy@idpf.org</a></p></dd><dt class="varlistentry"><span class="term">Intended usage:</span></dt><dd><p>COMMON</p></dd><dt class="varlistentry"><span class="term">Author/Change controller:</span></dt><dd><p>International Digital Publishing Forum (<a href="http://www.idpf.org">http://www.idpf.org</a>)</p></dd></dl></div></div></body></html>
